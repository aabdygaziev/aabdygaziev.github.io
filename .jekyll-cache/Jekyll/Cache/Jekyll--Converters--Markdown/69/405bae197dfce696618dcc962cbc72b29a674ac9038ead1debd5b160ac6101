I"O<hr />

<p><img src="/images/face_id/download.png" alt="png" /></p>

<p>OpenCV is very powerfull library designed to solve computer vision problems. OpenCV-Python makes use of Numpy, which is a highly optimized library for numerical operations with a MATLAB-style syntax. All the OpenCV array structures are converted to and from Numpy arrays. This also makes it easier to integrate with other libraries that use Numpy such as SciPy and Matplotlib (OpenCV documentation).</p>

<p>To be able to detect faces real-time we will use <strong>HAAR classifier</strong>. Itâ€™s a machine learning based algorithm to identify object in an image or video. You can learn more about Haar and computer vision on <a href="http://www.willberger.org/cascade-haar-explained/">Will Bergers website</a>. Also on <a href="https://en.wikipedia.org/wiki/Haar-like_feature#:~:text=Haar%2Dlike%20features%20are%20digital,first%20real%2Dtime%20face%20detector.">wikipedia</a>.</p>

<p>Before starting, you need to download <a href="https://github.com/opencv/opencv/tree/master/data/haarcascades">haarcascade_frontalface_default.xml</a> file on github.</p>

<p>First, we need to import Numpy and OpenCV.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">cv2</span>
</code></pre></div></div>

<p>Next:</p>
<ul>
  <li>We difine our classifier at<strong>face_cascade</strong>.</li>
  <li><strong>cap = cv2.VideoCapture(0)</strong> returns video from your fisrt webcamera</li>
  <li><strong>cap.set</strong> method is optional if you want to resize your frame.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">face_cascade</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">CascadeClassifier</span><span class="p">(</span><span class="s">'haarcascade_frontalface_default.xml'</span><span class="p">)</span>

<span class="n">cap</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">VideoCapture</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FRAME_WIDTH</span><span class="p">,</span> <span class="mi">500</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FRAME_HEIGHT</span><span class="p">,</span> <span class="mi">250</span><span class="p">)</span>
<span class="n">cap</span><span class="p">.</span><span class="nb">set</span><span class="p">(</span><span class="n">cv2</span><span class="p">.</span><span class="n">CAP_PROP_FPS</span><span class="p">,</span> <span class="mi">25</span><span class="p">)</span>
</code></pre></div></div>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>True
</code></pre></div></div>

<p><strong>while True</strong> initiates infinite loop.</p>
<ul>
  <li>ret, img = cap.read() - ret is boolean value if a frame was returned at all times. <strong>img</strong> is a frame.</li>
  <li>then, we convert <strong>img</strong> to grayscale</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="c1"># Read the frame
</span>    <span class="n">ret</span><span class="p">,</span> <span class="n">img</span> <span class="o">=</span> <span class="n">cap</span><span class="p">.</span><span class="n">read</span><span class="p">()</span>
    <span class="c1"># Convert to grayscale
</span>    <span class="n">gray</span> <span class="o">=</span> <span class="n">cv2</span><span class="p">.</span><span class="n">cvtColor</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="n">cv2</span><span class="p">.</span><span class="n">COLOR_BGR2GRAY</span><span class="p">)</span>
    <span class="c1"># Detect the faces
</span>    <span class="n">faces</span> <span class="o">=</span> <span class="n">face_cascade</span><span class="p">.</span><span class="n">detectMultiScale</span><span class="p">(</span><span class="n">gray</span><span class="p">,</span> <span class="mf">1.1</span><span class="p">,</span> <span class="mi">4</span><span class="p">)</span>
    <span class="c1"># Draw the rectangle around each face
</span>    <span class="k">for</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">w</span><span class="p">,</span> <span class="n">h</span><span class="p">)</span> <span class="ow">in</span> <span class="n">faces</span><span class="p">:</span>
        <span class="n">cv2</span><span class="p">.</span><span class="n">rectangle</span><span class="p">(</span><span class="n">img</span><span class="p">,</span> <span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">),</span> <span class="p">(</span><span class="n">x</span><span class="o">+</span><span class="n">w</span><span class="p">,</span> <span class="n">y</span><span class="o">+</span><span class="n">h</span><span class="p">),</span> <span class="p">(</span><span class="mi">255</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="mi">2</span><span class="p">)</span>
    <span class="c1"># Display
</span>    <span class="n">cv2</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="s">'img'</span><span class="p">,</span> <span class="n">img</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">cv2</span><span class="p">.</span><span class="n">waitKey</span><span class="p">(</span><span class="mi">20</span><span class="p">)</span> <span class="o">&amp;</span> <span class="mh">0xFF</span> <span class="o">==</span> <span class="nb">ord</span><span class="p">(</span><span class="s">'q'</span><span class="p">):</span>
        <span class="k">break</span>
<span class="c1"># Release the VideoCapture object
</span><span class="n">cap</span><span class="p">.</span><span class="n">release</span><span class="p">()</span>
</code></pre></div></div>

<h1 id="results">Results</h1>

<p><img src="/images/face_id/Screen Shot 2020-06-28 at 7.40.40 PM.png" alt="png" />
<img src="/images/face_id/Screen Shot 2020-06-28 at 7.40.51 PM.png" alt="png" /></p>

<h3 id="as-you-can-see-it-works-and-it-is-really-simple-to-build-imagine-if-you-spend-on-this-project-like-10-hours-i-bet-you-can-build-a-very-sophisticated-algorithm">As you can see it works, and it is really simple to build. Imagine if you spend on this project like 10 hours. I bet you can build a very sophisticated algorithm.</h3>
:ET